:root {
    --first-background: #272727;
    --second-background: #373737;
    --third-background: #3e3e3e;
    --fourth-background: #5e5e5e;
    --text-color: #fff;
    --common-px: 8px;
    --border-color: #444;
    --bright-border-color: #999;
    --accent-color: #3771bd;
    --bright-accent-color: #427cc7;
    --dark-accent-color: #245796;
    --transparent: rgba(0, 0, 0, .7);
}

@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@300&display=swap');

* {
    color: var(--text-color);
    font-family: 'Ubuntu', sans-serif;
}

html,
body {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-direction: column;
    background-color: var(--first-background);
    margin: 0;
    padding: 0;
}

.meters {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: calc(var(--common-px) / 2);
    position: fixed;
    top: var(--common-px);
    background-color: var(--transparent);
    padding: var(--common-px);
    border: 1px solid var(--border-color);
    border-radius: var(--common-px);
    z-index: 1;

    .stats {
        display: flex;
        gap: calc(var(--common-px) / 2);
    }

    .user-meter,
    .bot-meter {
        display: flex;
        align-items: center;
        gap: calc(var(--common-px) / 2);
    }

    span {
        font-weight: bold;
        font-size: calc(var(--common-px) * 2.5);
    }

    .bar {
        width: 1.5in;
        height: 1.5rem;
        border: 2px solid var(--bright-border-color);
        border-radius: var(--common-px);
        overflow: hidden;

        .percentage {
            background-color: var(--accent-color);
            height: 100%;
            width: 0;
            transition: width 200ms;
        }

        &:is(.timebar) {
            position: relative;

            .percentage {
                width: 100%;
            }

            .time {
                position: absolute;
                left: 50%;
                top: 50%;
                transform: translate(-50%, -50%);
            }
        }
    }
}

.message-history {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
    width: 100%;
    margin: var(--common-px);
}

.user,
.bot {
    display: flex;
    flex-direction: column;
    width: 100%;
    margin-bottom: calc(var(--common-px) / 2);

    &:is(.user) .message-container {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        margin-right: var(--common-px);
        gap: calc(var(--common-px) / 2);

        .message {
            background-color: var(--accent-color);
        }
    }

    &:is(.bot) .message-container {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        margin-left: var(--common-px);
        gap: calc(var(--common-px) / 2);

        .message {
            background-color: var(--second-background);
        }
    }
}

.message {
    border-radius: calc(var(--common-px) * 2.5);
    padding: calc(var(--common-px) * 1.2);
    width: max-content;
    word-wrap: break-word;
    max-width: 75%;
    animation: showMessage 100ms linear forwards;
}

@keyframes showMessage {
    from {
        opacity: 0;
        transform: scale(.8);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

.message-zone {
    width: calc(100% - 20px);
    display: flex;
    text-align: center;
    padding: var(--common-px);
    gap: calc(var(--common-px) - 6px);
    height: calc(var(--common-px) * 6);
    background-color: var(--first-background);
    
    &::before {
        content: '';
        position: absolute;
        box-shadow: 0 -25px 15px var(--first-background);
        left: 0;
        top: 0;
        width: calc(100% + var(--common-px));
        height: 100%;
        pointer-events: none;
    }

    input {
        width: 100%;
    }

    button {
        width: .5in;
    }
}

input,
button {
    background-color: var(--second-background);
    outline: none;
    padding: var(--common-px);
    border: 1px solid var(--border-color);
    border-radius: var(--common-px);
    font-size: calc(var(--common-px) * 1.9);

    &:is(button) {
        background-color: var(--accent-color);
        border-color: var(--bright-accent-color);
        cursor: pointer;
        transition: background 200ms;

        &:hover {
            background-color: var(--bright-accent-color);
        }

        &:disabled {
            background-color: var(--dark-accent-color);
            cursor: not-allowed;
        }
    }

    &:is(input) {
        transition: box-shadow 200ms;

        &:focus {
            box-shadow: 0 0 0 calc(var(--common-px) / 2) var(--accent-color);
        }
    }
}

.thinking-dot {
    background-color: var(--fourth-background);
    border-radius: 50%;
    padding: var(--common-px);
    width: 0;
    height: 0;
    animation: blinking 2s infinite;

    &:nth-child(2) {
        animation-delay: 500ms;
    }

    &:last-child {
        animation-delay: 1s;
    }
}

@keyframes blinking {
    0% {
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

.scene {
    position: fixed;
    left: 0;
    top: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    gap: calc(var(--common-px) / 2);
    background-color: var(--transparent);

    .scene-buttons {
        display: flex;
        flex-direction: column;
        gap: calc(var(--common-px) / 2);
    }
}

.fake-anchor {
    color: var(--text-color);
    font-weight: bold;
    text-decoration: underline;
    cursor: pointer;
}

::-webkit-scrollbar {
    width: var(--common-px);
}

::-webkit-scrollbar-thumb {
    border-radius: var(--common-px);
    background-color: var(--second-background);

    &:hover {
        background-color: var(--third-background);
    }
}